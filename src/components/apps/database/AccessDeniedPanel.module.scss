@import "../../../styles/variables.scss";
@import "../../../styles/mixins.scss";

.accessDeniedPanel {
  display: flex;
  justify-content: center;
  align-items: center;
  flex: 1;
  padding: 20px;
  background-color: rgba(0, 0, 0, 0.3);
}

.innerPanel {
  width: 100%;
  max-width: 500px;
  padding: 20px;
  background-color: rgba(0, 0, 0, 0.5);
  border: 1px solid $hacker-green;
  display: flex;
  flex-direction: column;
  align-items: center;
  box-shadow: 0 0 20px rgba($hacker-green, 0.2);
  animation: fadeIn 0.5s ease;
}

.terminalHeader {
  display: flex;
  align-items: center;
  gap: 10px;
  width: 100%;
  padding-bottom: 15px;
  margin-bottom: 20px;
  border-bottom: 1px solid rgba($hacker-green, 0.3);
}

.typingText {
  font-family: $font-mono;
  font-size: 16px;
  font-weight: bold;
  color: $hacker-green;
  text-shadow: 0 0 5px rgba($hacker-green, 0.5);
  letter-spacing: 1px;
}

.cursor {
  display: inline-block;
  width: 10px;
  color: $hacker-green;
  animation: blink 1s step-end infinite;
}

.lockIcon {
  margin: 20px 0;
}

.iconWrapper {
  width: 80px;
  height: 80px;
  display: flex;
  align-items: center;
  justify-content: center;
  border-radius: 50%;
  background-color: rgba(0, 0, 0, 0.5);
  border: 2px solid $hacker-green;
  color: $hacker-green;
  box-shadow: 0 0 20px rgba($hacker-green, 0.3);
  position: relative;

  &::after {
    content: "";
    position: absolute;
    top: -10px;
    left: -10px;
    right: -10px;
    bottom: -10px;
    border: 1px solid rgba($hacker-green, 0.3);
    border-radius: 50%;
    animation: pulse 2s infinite;
  }
}

.statusMessage {
  display: flex;
  align-items: center;
  gap: 8px;
  padding: 5px 20px;
  background-color: rgba($hacker-red, 0.1);
  border: 1px solid $hacker-red;
  color: $hacker-red;
  font-weight: bold;
  margin-bottom: 15px;
}

.instruction {
  text-align: center;
  margin-bottom: 20px;
  color: $hacker-green;
  font-size: 14px;
}

.accessForm {
  width: 100%;
  margin-bottom: 20px;
}

.inputGroup {
  display: flex;
  gap: 10px;
  margin-bottom: 10px;
}

.accessInput {
  flex: 1;
  padding: 10px 15px;
  background-color: rgba(0, 0, 0, 0.7);
  border: 1px solid $hacker-green;
  color: $hacker-green;
  font-family: $font-mono;
  font-size: 16px;
  outline: none;

  &:focus {
    box-shadow: 0 0 10px rgba($hacker-green, 0.4);
  }

  &::placeholder {
    color: rgba($hacker-green, 0.5);
  }
}

.accessButton {
  padding: 10px 15px;
  background-color: rgba(0, 0, 0, 0.7);
  border: 1px solid $hacker-green;
  color: $hacker-green;
  font-family: $font-mono;
  font-size: 14px;
  font-weight: bold;
  letter-spacing: 1px;
  cursor: pointer;
  transition: all $transition-standard ease;

  &:hover {
    background-color: rgba($hacker-green, 0.1);
    box-shadow: 0 0 10px rgba($hacker-green, 0.4);
  }

  &:active {
    transform: scale(0.98);
  }
}

.errorMessage {
  color: $hacker-red;
  padding: 10px;
  background-color: rgba($hacker-red, 0.1);
  border: 1px solid $hacker-red;
  font-size: 14px;
  text-align: center;
  animation: shakeEffect 0.5s ease;
}

.securityNotice {
  width: 100%;
  padding: 15px;
  background-color: rgba(0, 0, 0, 0.3);
  border: 1px solid rgba($hacker-green, 0.3);
  margin-bottom: 15px;

  .noticeTitle {
    font-weight: bold;
    color: $hacker-green;
    margin-bottom: 10px;
    font-size: 14px;
    letter-spacing: 1px;
    text-align: center;
  }

  p {
    font-size: 12px;
    color: rgba($hacker-green, 0.8);
    margin-bottom: 8px;
    line-height: 1.4;
    text-align: center;

    &:last-child {
      margin-bottom: 0;
    }
  }
}

.helpMessage {
  font-size: 12px;
  color: rgba($hacker-green, 0.6);
  text-align: center;
  font-style: italic;
}

@keyframes fadeIn {
  from {
    opacity: 0;
    transform: translateY(-10px);
  }
  to {
    opacity: 1;
    transform: translateY(0);
  }
}

@keyframes blink {
  from,
  to {
    opacity: 1;
  }
  50% {
    opacity: 0;
  }
}

@keyframes pulse {
  0%,
  100% {
    opacity: 0.3;
    transform: scale(1);
  }
  50% {
    opacity: 0.8;
    transform: scale(1.05);
  }
}

@keyframes shakeEffect {
  0%,
  100% {
    transform: translateX(0);
  }
  10%,
  30%,
  50%,
  70%,
  90% {
    transform: translateX(-5px);
  }
  20%,
  40%,
  60%,
  80% {
    transform: translateX(5px);
  }
}
